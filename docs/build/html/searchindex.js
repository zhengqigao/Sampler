Search.setIndex({"docnames": ["index", "modules", "references", "sampler", "sampler.base", "sampler.functional", "sampler.model"], "filenames": ["index.rst", "modules.rst", "references.rst", "sampler.rst", "sampler.base.rst", "sampler.functional.rst", "sampler.model.rst"], "titles": ["Welcome to sampler\u2019s documentation!", "sampler", "References", "sampler package", "sampler.base package", "sampler.functional package", "sampler.model package"], "terms": {"packag": [0, 1], "submodul": [0, 1], "base": [0, 1, 5, 6], "modul": [0, 1], "distribut": [0, 1, 4, 5, 6], "refer": 0, "index": [0, 6], "search": 0, "page": 0, "linearenvelop1d": [1, 3], "log_prob": [1, 3, 6], "sampl": [1, 2, 3, 4, 5], "train": [1, 3, 5, 6], "tdwrapper": [1, 3], "updatelinearenvelop1d": [1, 3], "content": 1, "bishop2006prml": [2, 4], "bishop": 2, "christoph": 2, "pattern": [2, 6], "recognit": 2, "machin": 2, "learn": 2, "springer": 2, "googl": 2, "schola": 2, "2": [2, 4, 6], "2006": 2, "5": 2, "43": 2, "gilks1992ar": 2, "gilk": 2, "walter": 2, "r": [2, 4, 6], "pascal": 2, "wild": 2, "adapt": 2, "reject": 2, "gibb": [2, 4], "journal": 2, "royal": 2, "statist": 2, "societi": 2, "seri": 2, "c": [2, 6], "appli": 2, "41": 2, "1992": 2, "337": 2, "348": 2, "neal2001ai": [2, 4], "neal": 2, "radford": 2, "m": 2, "anneal": [2, 4], "import": [2, 4], "comput": [2, 4, 5, 6], "11": [2, 4], "2001": 2, "125": 2, "139": 2, "kimhung": 2, "li": 2, "kim": 2, "hung": 2, "The": [2, 3, 4, 5, 6], "resampl": 2, "algorithm": [2, 4], "In": 2, "bayesian": 2, "model": [2, 4, 5], "causal": 2, "infer": 2, "from": [2, 3, 4], "incomplet": 2, "data": [2, 4, 6], "perspect": 2, "2004": 2, "dinh2017": [2, 6], "laurent": 2, "dinh": 2, "jascha": 2, "sohl": 2, "dickstein": 2, "sami": 2, "bengio": 2, "densiti": [2, 3, 4, 5], "estim": [2, 4, 5, 6], "us": [2, 4, 5, 6], "real": 2, "nvp": 2, "iclr": 2, "2017": 2, "rezende2015": [2, 6], "rezend": 2, "danilo": 2, "jimenez": 2, "shakir": 2, "moham": 2, "variat": 2, "normal": 2, "flow": [2, 6], "icml": 2, "2015": 2, "peng2020gibb": 2, "roger": 2, "peng": 2, "onlin": 2, "http": [2, 6], "bookdown": 2, "org": 2, "rdpeng": 2, "advstatcomp": 2, "sampler": 2, "html": 2, "dinh2015nic": [2, 6], "david": 2, "krueger": 2, "yoshua": 2, "nice": [2, 6], "non": [2, 4, 6], "linear": [2, 6], "independ": 2, "compon": 2, "workshop": 2, "george2017maf": 2, "georg": 2, "papamakario": 2, "theo": 2, "pavlak": 2, "iain": 2, "murrai": 2, "mask": [2, 6], "autoregress": [2, 6], "neurip": 2, "kingma2018glow": [2, 6], "diederik": 2, "p": [2, 3, 4, 5], "kingma": 2, "prafulla": 2, "dhariw": 2, "glow": 2, "gener": [2, 5], "invert": [2, 6], "1": [2, 4, 5, 6], "convolut": [2, 6], "2018": 2, "class": [3, 4, 5, 6], "grid": 3, "deriv": 3, "eval_valu": 3, "sourc": [3, 4, 5, 6], "x": [3, 4, 6], "tensor": [3, 4, 5, 6], "evalu": [3, 4], "function": [3, 4, 6], "log": [3, 4, 5, 6], "tild": 3, "given": [3, 4, 6], "return": [3, 4, 6], "valu": [3, 4, 6], "should": [3, 4, 5, 6], "shape": [3, 6], "0": [3, 4, 5, 6], "paramet": [3, 4, 6], "torch": [3, 4, 6], "point": [3, 4], "": 3, "which": 3, "num_sampl": [3, 4, 5], "int": [3, 4, 5, 6], "draw": [3, 4], "number": [3, 4, 6], "drawn": [3, 4], "bool": [3, 4, 5, 6], "arg": [3, 4, 6], "kwarg": [3, 4, 5, 6], "gibbs_sampl": 4, "condi": 4, "tupl": [4, 6], "condistribut": 4, "list": [4, 6], "initi": [4, 6], "burn_in": 4, "none": [4, 5, 6], "block": 4, "fals": [4, 6], "block_list": 4, "ani": [4, 6], "condit": [4, 6], "see": [4, 6], "section": 4, "3": [4, 6], "even": [4, 6], "though": [4, 6], "all": [4, 5, 6], "those": 4, "probabl": [4, 6], "i": [4, 5, 6], "still": 4, "imposs": 4, "directli": [4, 6], "joint": 4, "howev": 4, "provid": 4, "wai": [4, 6], "union": [4, 6], "start": 4, "process": 4, "option": [4, 6], "burn": 4, "discard": 4, "default": [4, 6], "perform": [4, 5, 6], "set": [4, 6], "true": [4, 6], "variabl": 4, "partit": 4, "scoreestim": 4, "reinforc": 4, "also": [4, 6], "known": 4, "score": 4, "gradient": [4, 6], "math": [4, 5], "e_": 4, "p_": 4, "theta": 4, "f": [4, 6], "respect": 4, "It": [4, 5, 6], "have": [4, 6], "larg": 4, "varianc": 4, "static": [4, 6], "backward": [4, 6], "ctx": [4, 6], "grad_output": [4, 6], "defin": [4, 5, 6], "formula": [4, 6], "differenti": [4, 6], "oper": [4, 6], "mode": [4, 6], "automat": [4, 6], "alia": [4, 6], "vjp": [4, 6], "thi": [4, 5, 6], "overridden": [4, 5, 6], "subclass": [4, 5, 6], "must": [4, 6], "accept": [4, 6], "context": [4, 6], "first": [4, 6], "argument": [4, 6], "follow": [4, 6], "mani": [4, 6], "output": [4, 6], "forward": [4, 5, 6], "pass": [4, 5, 6], "were": [4, 6], "input": [4, 6], "each": [4, 6], "w": [4, 6], "t": [4, 6], "correspond": [4, 6], "If": [4, 6], "an": [4, 6], "requir": [4, 6], "grad": [4, 6], "you": [4, 6], "can": [4, 5, 6], "just": [4, 6], "retriev": [4, 6], "save": [4, 6], "dure": [4, 6], "ha": [4, 6], "attribut": [4, 6], "needs_input_grad": [4, 6], "boolean": [4, 6], "repres": [4, 6], "whether": [4, 6], "need": [4, 5, 6], "e": [4, 6], "g": [4, 6], "biprobtran": [4, 5, 6], "func": [4, 5], "reduct": [4, 5], "str": [4, 5], "mean": [4, 5], "param": 4, "There": [4, 6], "ar": [4, 6], "two": [4, 6], "usag": [4, 6], "combin": [4, 6], "staticmethod": [4, 6], "def": [4, 6], "other": [4, 6], "type": [4, 6], "more": [4, 6], "detail": [4, 6], "separ": [4, 6], "setup_context": [4, 6], "longer": [4, 6], "instead": [4, 5, 6], "overrid": [4, 6], "autograd": [4, 6], "handl": [4, 6], "up": [4, 6], "object": [4, 6], "extend": [4, 6], "store": [4, 6], "arbitrari": [4, 6], "current": [4, 6], "enforc": [4, 6], "compat": [4, 6], "either": [4, 6], "save_for_backward": [4, 6], "thei": [4, 6], "intend": [4, 6], "equival": [4, 6], "save_for_forward": [4, 6], "jvp": [4, 6], "annealed_importance_sampl": 4, "target": [4, 5], "_common": 4, "transit": 4, "eval_func": 4, "beta": 4, "float": [4, 5, 6], "anneal_log_criterion": 4, "callabl": 4, "lambda": 4, "ai": 4, "calcul": 4, "sequenc": [4, 6], "intermedi": 4, "p_n": 4, "n": [4, 5], "p_0": 4, "strictli": 4, "increas": 4, "its": 4, "element": 4, "weight": [4, 6], "portion": 4, "leav": 4, "invari": 4, "p_j": 4, "j": 4, "dx": 4, "To": 4, "guarante": 4, "metropoli": 4, "hast": 4, "eq": 4, "44": 4, "45": 4, "By": [4, 6], "we": [4, 6], "criterion": 4, "beta_j": 4, "_": 4, "p_t": 4, "p_b": 4, "markov": 4, "chain": 4, "score_estim": 4, "kldenloss": 5, "log_p": 5, "kl": 5, "diverg": 5, "q": 5, "task": 5, "where": [5, 6], "learnabl": 5, "everi": [5, 6], "call": [5, 6], "although": [5, 6], "recip": [5, 6], "within": [5, 6], "one": [5, 6], "instanc": [5, 6], "afterward": [5, 6], "sinc": [5, 6], "former": [5, 6], "take": [5, 6], "care": [5, 6], "run": [5, 6], "regist": [5, 6], "hook": [5, 6], "while": [5, 6], "latter": [5, 6], "silent": [5, 6], "ignor": [5, 6], "them": [5, 6], "klgenloss": 5, "dequant_std": 5, "reduc": 5, "neg": 5, "likelihood": 5, "sum": 5, "z_n": 5, "th": [5, 6], "dataset": 5, "z": [5, 6], "scoredenloss": 5, "dim": 6, "keep_dim": 6, "scale_net": 6, "shift_net": 6, "p_base": 6, "affin": 6, "coupl": 6, "keep": 6, "dimens": 6, "unchang": 6, "specifi": 6, "transform": 6, "scale": 6, "shift": 6, "network": 6, "exampl": 6, "couplingflow": 6, "nn": 6, "rand": 6, "10": 6, "x_": 6, "diff_log_det": 6, "diff": 6, "print": 6, "max": 6, "ab": 6, "log_det": 6, "probabilist": 6, "befor": 6, "after": 6, "associ": 6, "num_tran": 6, "modulelist": 6, "realnvp": 6, "describ": 6, "special": 6, "case": 6, "chang": 6, "odd": 6, "indic": 6, "second": 6, "altern": 6, "custom": 6, "both": 6, "same": 6, "length": 6, "allow": 6, "architectur": 6, "maf": 6, "papamakarios2017": 6, "maflay": 6, "actnorm": 6, "num_featur": 6, "reset_paramet": 6, "batch_data": 6, "inv1by1conv": 6, "bia": 6, "1x1": 6, "reparametrize_u": 6, "permut": 6, "invers": 6, "note": 6, "origin": 6, "implement": 6, "lu": 6, "factor": 6, "hidden_dim": 6, "activ": 6, "relu": 6, "order": 6, "autoencod": 6, "code": 6, "copi": 6, "refin": 6, "github": 6, "com": 6, "hulten": 6, "blob": 6, "master": 6, "py": 6, "batch_siz": 6, "locat": 6, "k": 6, "properti": 6, "set_binary_mask": 6, "maskedlinear": 6, "in_featur": 6, "out_featur": 6, "devic": 6, "dtype": 6, "alphasolv": 6, "b": 6, "alpha_it": 6, "alpha_threshold": 6, "10000": 6, "1e": 6, "09": 6, "planar": 6, "appendix": 6, "solve_alpha": 6, "radial": 6, "reparametrize_beta": 6}, "objects": {"": [[3, 0, 0, "-", "sampler"]], "sampler": [[4, 0, 0, "-", "base"], [3, 0, 0, "-", "distribution"], [5, 0, 0, "-", "functional"], [6, 0, 0, "-", "model"]], "sampler.base": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "expectation"]], "sampler.base.base": [[4, 1, 1, "", "gibbs_sampling"]], "sampler.base.expectation": [[4, 2, 1, "", "ScoreEstimator"], [4, 1, 1, "", "annealed_importance_sampling"], [4, 1, 1, "", "score_estimator"]], "sampler.base.expectation.ScoreEstimator": [[4, 3, 1, "", "backward"], [4, 3, 1, "", "forward"]], "sampler.distribution": [[3, 2, 1, "", "LinearEnvelop1D"], [3, 2, 1, "", "TDWrapper"], [3, 2, 1, "", "UpdateLinearEnvelop1D"]], "sampler.distribution.LinearEnvelop1D": [[3, 3, 1, "", "log_prob"], [3, 3, 1, "", "sample"], [3, 4, 1, "", "training"]], "sampler.distribution.TDWrapper": [[3, 3, 1, "", "log_prob"], [3, 3, 1, "", "sample"], [3, 4, 1, "", "training"]], "sampler.distribution.UpdateLinearEnvelop1D": [[3, 3, 1, "", "log_prob"], [3, 3, 1, "", "sample"], [3, 4, 1, "", "training"]], "sampler.functional": [[5, 0, 0, "-", "loss"]], "sampler.functional.loss": [[5, 2, 1, "", "KLDenLoss"], [5, 2, 1, "", "KLGenLoss"], [5, 2, 1, "", "ScoreDenLoss"]], "sampler.functional.loss.KLDenLoss": [[5, 3, 1, "", "forward"], [5, 4, 1, "", "training"]], "sampler.functional.loss.KLGenLoss": [[5, 3, 1, "", "forward"], [5, 4, 1, "", "training"]], "sampler.functional.loss.ScoreDenLoss": [[5, 3, 1, "", "forward"], [5, 4, 1, "", "training"]], "sampler.model": [[6, 0, 0, "-", "affinecouplingflow"], [6, 0, 0, "-", "autoregressiveflow"], [6, 0, 0, "-", "glow"], [6, 0, 0, "-", "made"], [6, 0, 0, "-", "planarflow"], [6, 0, 0, "-", "radialflow"]], "sampler.model.affinecouplingflow": [[6, 2, 1, "", "AffineCouplingFlow"], [6, 2, 1, "", "NICE"], [6, 2, 1, "", "RealNVP"]], "sampler.model.affinecouplingflow.AffineCouplingFlow": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "sampler.model.affinecouplingflow.NICE": [[6, 4, 1, "", "training"]], "sampler.model.affinecouplingflow.RealNVP": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "sampler.model.autoregressiveflow": [[6, 2, 1, "", "MAF"], [6, 2, 1, "", "MAFLayer"]], "sampler.model.autoregressiveflow.MAF": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "sampler.model.autoregressiveflow.MAFLayer": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 4, 1, "", "training"]], "sampler.model.glow": [[6, 2, 1, "", "Actnorm"], [6, 2, 1, "", "Inv1by1Conv"]], "sampler.model.glow.Actnorm": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "reset_parameters"], [6, 4, 1, "", "training"]], "sampler.model.glow.Inv1by1Conv": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "reparametrize_u"], [6, 3, 1, "", "reset_parameters"], [6, 4, 1, "", "training"]], "sampler.model.made": [[6, 2, 1, "", "MADE"], [6, 2, 1, "", "MaskedLinear"]], "sampler.model.made.MADE": [[6, 3, 1, "", "forward"], [6, 5, 1, "", "order"], [6, 3, 1, "", "set_binary_mask"], [6, 4, 1, "", "training"]], "sampler.model.made.MaskedLinear": [[6, 3, 1, "", "forward"], [6, 4, 1, "", "in_features"], [6, 4, 1, "", "out_features"], [6, 3, 1, "", "set_binary_mask"], [6, 4, 1, "", "weight"]], "sampler.model.planarflow": [[6, 2, 1, "", "AlphaSolver"], [6, 2, 1, "", "PlanarFlow"]], "sampler.model.planarflow.AlphaSolver": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"]], "sampler.model.planarflow.PlanarFlow": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "reparametrize_u"], [6, 3, 1, "", "reset_parameters"], [6, 3, 1, "", "solve_alpha"], [6, 4, 1, "", "training"]], "sampler.model.radialflow": [[6, 2, 1, "", "RadialFlow"]], "sampler.model.radialflow.RadialFlow": [[6, 3, 1, "", "backward"], [6, 3, 1, "", "forward"], [6, 3, 1, "", "reparametrize_beta"], [6, 3, 1, "", "reset_parameters"], [6, 4, 1, "", "training"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "sampler": [0, 1, 3, 4, 5, 6], "": 0, "document": 0, "content": [0, 3, 4, 5, 6], "indic": 0, "tabl": 0, "refer": 2, "packag": [3, 4, 5, 6], "submodul": [3, 4, 5, 6], "base": [3, 4], "modul": [3, 4, 5, 6], "distribut": 3, "expect": 4, "function": 5, "loss": 5, "model": 6, "affinecouplingflow": 6, "autoregressiveflow": 6, "glow": 6, "made": 6, "planarflow": 6, "radialflow": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Welcome to sampler\u2019s documentation!": [[0, "welcome-to-sampler-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "sampler": [[1, "sampler"]], "References": [[2, "references"]], "sampler package": [[3, "sampler-package"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "sampler.base module": [[3, "module-sampler.base"]], "sampler.distribution module": [[3, "module-sampler.distribution"]], "Module contents": [[3, "module-sampler"], [4, "module-sampler.base"], [5, "module-sampler.functional"], [6, "module-sampler.model"]], "sampler.base package": [[4, "sampler-base-package"]], "sampler.base.base module": [[4, "module-sampler.base.base"]], "sampler.base.expectation module": [[4, "module-sampler.base.expectation"]], "sampler.functional package": [[5, "sampler-functional-package"]], "sampler.functional.loss module": [[5, "module-sampler.functional.loss"]], "sampler.model package": [[6, "sampler-model-package"]], "sampler.model.affinecouplingflow module": [[6, "module-sampler.model.affinecouplingflow"]], "sampler.model.autoregressiveflow module": [[6, "module-sampler.model.autoregressiveflow"]], "sampler.model.glow module": [[6, "module-sampler.model.glow"]], "sampler.model.made module": [[6, "module-sampler.model.made"]], "sampler.model.planarflow module": [[6, "module-sampler.model.planarflow"]], "sampler.model.radialflow module": [[6, "module-sampler.model.radialflow"]]}, "indexentries": {"actnorm (class in sampler.model.glow)": [[6, "sampler.model.glow.Actnorm"]], "affinecouplingflow (class in sampler.model.affinecouplingflow)": [[6, "sampler.model.affinecouplingflow.AffineCouplingFlow"]], "alphasolver (class in sampler.model.planarflow)": [[6, "sampler.model.planarflow.AlphaSolver"]], "inv1by1conv (class in sampler.model.glow)": [[6, "sampler.model.glow.Inv1by1Conv"]], "made (class in sampler.model.made)": [[6, "sampler.model.made.MADE"]], "maf (class in sampler.model.autoregressiveflow)": [[6, "sampler.model.autoregressiveflow.MAF"]], "maflayer (class in sampler.model.autoregressiveflow)": [[6, "sampler.model.autoregressiveflow.MAFLayer"]], "maskedlinear (class in sampler.model.made)": [[6, "sampler.model.made.MaskedLinear"]], "nice (class in sampler.model.affinecouplingflow)": [[6, "sampler.model.affinecouplingflow.NICE"]], "planarflow (class in sampler.model.planarflow)": [[6, "sampler.model.planarflow.PlanarFlow"]], "radialflow (class in sampler.model.radialflow)": [[6, "sampler.model.radialflow.RadialFlow"]], "realnvp (class in sampler.model.affinecouplingflow)": [[6, "sampler.model.affinecouplingflow.RealNVP"]], "backward() (sampler.model.affinecouplingflow.affinecouplingflow method)": [[6, "sampler.model.affinecouplingflow.AffineCouplingFlow.backward"]], "backward() (sampler.model.affinecouplingflow.realnvp method)": [[6, "sampler.model.affinecouplingflow.RealNVP.backward"]], "backward() (sampler.model.autoregressiveflow.maf method)": [[6, "sampler.model.autoregressiveflow.MAF.backward"]], "backward() (sampler.model.autoregressiveflow.maflayer method)": [[6, "sampler.model.autoregressiveflow.MAFLayer.backward"]], "backward() (sampler.model.glow.actnorm method)": [[6, "sampler.model.glow.Actnorm.backward"]], "backward() (sampler.model.glow.inv1by1conv method)": [[6, "sampler.model.glow.Inv1by1Conv.backward"]], "backward() (sampler.model.planarflow.alphasolver static method)": [[6, "sampler.model.planarflow.AlphaSolver.backward"]], "backward() (sampler.model.planarflow.planarflow method)": [[6, "sampler.model.planarflow.PlanarFlow.backward"]], "backward() (sampler.model.radialflow.radialflow method)": [[6, "sampler.model.radialflow.RadialFlow.backward"]], "forward() (sampler.model.affinecouplingflow.affinecouplingflow method)": [[6, "sampler.model.affinecouplingflow.AffineCouplingFlow.forward"]], "forward() (sampler.model.affinecouplingflow.realnvp method)": [[6, "sampler.model.affinecouplingflow.RealNVP.forward"]], "forward() (sampler.model.autoregressiveflow.maf method)": [[6, "sampler.model.autoregressiveflow.MAF.forward"]], "forward() (sampler.model.autoregressiveflow.maflayer method)": [[6, "sampler.model.autoregressiveflow.MAFLayer.forward"]], "forward() (sampler.model.glow.actnorm method)": [[6, "sampler.model.glow.Actnorm.forward"]], "forward() (sampler.model.glow.inv1by1conv method)": [[6, "sampler.model.glow.Inv1by1Conv.forward"]], "forward() (sampler.model.made.made method)": [[6, "sampler.model.made.MADE.forward"]], "forward() (sampler.model.made.maskedlinear method)": [[6, "sampler.model.made.MaskedLinear.forward"]], "forward() (sampler.model.planarflow.alphasolver static method)": [[6, "sampler.model.planarflow.AlphaSolver.forward"]], "forward() (sampler.model.planarflow.planarflow method)": [[6, "sampler.model.planarflow.PlanarFlow.forward"]], "forward() (sampler.model.radialflow.radialflow method)": [[6, "sampler.model.radialflow.RadialFlow.forward"]], "in_features (sampler.model.made.maskedlinear attribute)": [[6, "sampler.model.made.MaskedLinear.in_features"]], "module": [[6, "module-sampler.model"], [6, "module-sampler.model.affinecouplingflow"], [6, "module-sampler.model.autoregressiveflow"], [6, "module-sampler.model.glow"], [6, "module-sampler.model.made"], [6, "module-sampler.model.planarflow"], [6, "module-sampler.model.radialflow"]], "order (sampler.model.made.made property)": [[6, "sampler.model.made.MADE.order"]], "out_features (sampler.model.made.maskedlinear attribute)": [[6, "sampler.model.made.MaskedLinear.out_features"]], "reparametrize_beta() (sampler.model.radialflow.radialflow method)": [[6, "sampler.model.radialflow.RadialFlow.reparametrize_beta"]], "reparametrize_u() (sampler.model.glow.inv1by1conv method)": [[6, "sampler.model.glow.Inv1by1Conv.reparametrize_u"]], "reparametrize_u() (sampler.model.planarflow.planarflow method)": [[6, "sampler.model.planarflow.PlanarFlow.reparametrize_u"]], "reset_parameters() (sampler.model.glow.actnorm method)": [[6, "sampler.model.glow.Actnorm.reset_parameters"]], "reset_parameters() (sampler.model.glow.inv1by1conv method)": [[6, "sampler.model.glow.Inv1by1Conv.reset_parameters"]], "reset_parameters() (sampler.model.planarflow.planarflow method)": [[6, "sampler.model.planarflow.PlanarFlow.reset_parameters"]], "reset_parameters() (sampler.model.radialflow.radialflow method)": [[6, "sampler.model.radialflow.RadialFlow.reset_parameters"]], "sampler.model": [[6, "module-sampler.model"]], "sampler.model.affinecouplingflow": [[6, "module-sampler.model.affinecouplingflow"]], "sampler.model.autoregressiveflow": [[6, "module-sampler.model.autoregressiveflow"]], "sampler.model.glow": [[6, "module-sampler.model.glow"]], "sampler.model.made": [[6, "module-sampler.model.made"]], "sampler.model.planarflow": [[6, "module-sampler.model.planarflow"]], "sampler.model.radialflow": [[6, "module-sampler.model.radialflow"]], "set_binary_mask() (sampler.model.made.made method)": [[6, "sampler.model.made.MADE.set_binary_mask"]], "set_binary_mask() (sampler.model.made.maskedlinear method)": [[6, "sampler.model.made.MaskedLinear.set_binary_mask"]], "solve_alpha() (sampler.model.planarflow.planarflow method)": [[6, "sampler.model.planarflow.PlanarFlow.solve_alpha"]], "training (sampler.model.affinecouplingflow.affinecouplingflow attribute)": [[6, "sampler.model.affinecouplingflow.AffineCouplingFlow.training"]], "training (sampler.model.affinecouplingflow.nice attribute)": [[6, "sampler.model.affinecouplingflow.NICE.training"]], "training (sampler.model.affinecouplingflow.realnvp attribute)": [[6, "sampler.model.affinecouplingflow.RealNVP.training"]], "training (sampler.model.autoregressiveflow.maf attribute)": [[6, "sampler.model.autoregressiveflow.MAF.training"]], "training (sampler.model.autoregressiveflow.maflayer attribute)": [[6, "sampler.model.autoregressiveflow.MAFLayer.training"]], "training (sampler.model.glow.actnorm attribute)": [[6, "sampler.model.glow.Actnorm.training"]], "training (sampler.model.glow.inv1by1conv attribute)": [[6, "sampler.model.glow.Inv1by1Conv.training"]], "training (sampler.model.made.made attribute)": [[6, "sampler.model.made.MADE.training"]], "training (sampler.model.planarflow.planarflow attribute)": [[6, "sampler.model.planarflow.PlanarFlow.training"]], "training (sampler.model.radialflow.radialflow attribute)": [[6, "sampler.model.radialflow.RadialFlow.training"]], "weight (sampler.model.made.maskedlinear attribute)": [[6, "sampler.model.made.MaskedLinear.weight"]]}})